
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Users can read and write their own profile and associated data.
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Users can manage their own 'likes' subcollection.
      match /likes/{componentId} {
         allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // Community components have specific rules for reading, creating, and updating.
    match /community_components/{componentId} {
      // Anyone can read community components.
      allow read: if true;

      // Any authenticated user can create a component.
      allow create: if request.auth != null;

      // An authenticated user can update a component, but with restrictions:
      // 1. Any authenticated user can update the 'likes' and 'copies' fields.
      // 2. Only the author can update other fields (like name, code, description).
      allow update: if request.auth != null && (
        (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'copies'])) ||
        (resource.data.authorId == request.auth.uid)
      );
      
      // Only the author can delete their component.
      allow delete: if request.auth != null && resource.data.authorId == request.auth.uid;
    }
  }
}
